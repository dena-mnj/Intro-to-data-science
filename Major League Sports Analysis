
# The win/loss ratio's correlation with the population of the city it is in for the NHL using 2018 data
import pandas as pd
import numpy as np
import scipy.stats as stats
import re

def nhl_correlation(): 
    nhl_df=pd.read_csv("assets/nhl.csv").iloc[:-1,[0,2,3,13]]
    cities=pd.read_html("assets/wikipedia_data.html",na_values=['-'])[1]
    cities=cities.iloc[:-1,[0,3,8]]
    cities=cities.rename(columns={"Metropolitan area":"Metropolitan area",'Population (2016 est.)[8]':'Population',
                                   "NHL":"NHL"})
    
    nhl_df=nhl_df[nhl_df["year"]==2018]
    cities['NHL']=cities['NHL'].str.split("[").str.get(0)
    cities = cities[(cities.NHL != "—")&(cities.NHL != "")]
    
    city_list = cities['Metropolitan area']

    pattern = '|'.join(city_list)

    nhl_df['Metropolitan area'] = nhl_df['team'].str.findall(pattern)
    
    nhl_df['Metropolitan area'] = [' '.join(map(str, x)) for x in nhl_df['Metropolitan area']]
    nhl_df.loc[nhl_df['team'].str.contains('Tampa'), 'Metropolitan area'] = 'Tampa Bay Area'
    nhl_df.loc[nhl_df['team'].str.contains('Carolina'), 'Metropolitan area'] = 'Raleigh'
    nhl_df.loc[nhl_df['team'].str.contains('New York'), 'Metropolitan area'] = 'New York City'
    nhl_df.loc[nhl_df['team'].str.contains('New Jersey'), 'Metropolitan area'] = 'New York City'
    nhl_df.loc[nhl_df['team'].str.contains('Anaheim'), 'Metropolitan area'] = 'Los Angeles'
    nhl_df.loc[nhl_df['team'].str.contains('San Jose'), 'Metropolitan area'] = 'San Francisco Bay Area'
    nhl_df.loc[nhl_df['team'].str.contains('Dallas'), 'Metropolitan area'] = 'Dallas–Fort Worth'
    nhl_df.loc[nhl_df['team'].str.contains('Washington'), 'Metropolitan area'] = 'Washington, D.C.'
    nhl_df.loc[nhl_df['team'].str.contains('Minnesota'), 'Metropolitan area'] = 'Minneapolis–Saint Paul'
    nhl_df.loc[nhl_df['team'].str.contains('Colorado'), 'Metropolitan area'] = 'Denver'
    nhl_df.loc[nhl_df['team'].str.contains('Florida'), 'Metropolitan area'] = 'Miami–Fort Lauderdale'
    nhl_df.loc[nhl_df['team'].str.contains('Vegas'), 'Metropolitan area'] = 'Las Vegas'
    nhl_df.loc[nhl_df['team'].str.contains('Arizona'), 'Metropolitan area'] = 'Phoenix'
    
    
    nhl_df['Metropolitan area'].replace("", np.nan, inplace=True)
    nhl_df= nhl_df.dropna(subset=['Metropolitan area'])
    
    nhl_df.W = nhl_df.W.astype(np.float)
    nhl_df.L = nhl_df.L.astype(np.float)
    
    group_nhl_df = nhl_df.groupby(by=['Metropolitan area']).sum()
    
    group_nhl_df['w/l'] = group_nhl_df['W']/(group_nhl_df['W'] + group_nhl_df['L'])
    city_nhl = pd.merge(group_nhl_df, cities, how='inner', on='Metropolitan area')
   
    city_nhl.Population = city_nhl.Population.astype(np.float)
    population_by_region =  city_nhl['Population']
    win_loss_by_region = city_nhl['w/l']

    assert len(population_by_region) == len(win_loss_by_region), "Q1: Your lists must be the same length"
    assert len(population_by_region) == 28, "Q1: There should be 28 teams being analysed for NHL"
    
    corr, pval=stats.pearsonr(population_by_region, win_loss_by_region)
   
    return corr

nhl_correlation()


# The win/loss ratio's correlation with the population of the city it is in for the NBA using 2018 data
import pandas as pd
import numpy as np
import scipy.stats as stats
import re

def nba_correlation():
    nba_df=pd.read_csv("assets/nba.csv").iloc[:-1,[0,1,2,8]]
    cities=pd.read_html("assets/wikipedia_data.html",na_values=['-'])[1]
    cities=cities.iloc[:-1,[0,3,7]]
    cities=cities.rename(columns={"Metropolitan area":"Metropolitan area",'Population (2016 est.)[8]':'Population',
                                   "NBA":"NBA"})
    
    nba_df=nba_df[nba_df["year"]==2018]
    
    cities['NBA']=cities['NBA'].str.split("[").str.get(0)
    cities = cities[(cities.NBA != "—")&(cities.NBA != "")]
    
    city_list = cities['Metropolitan area']

    pattern = '|'.join(city_list)

    nba_df['Metropolitan area'] = nba_df['team'].str.findall(pattern)
    
    nba_df['Metropolitan area'] = [' '.join(map(str, x)) for x in nba_df['Metropolitan area']]
    
    nba_df.loc[nba_df['team'].str.contains('New York'), 'Metropolitan area'] = 'New York City'
    nba_df.loc[nba_df['team'].str.contains('Brooklyn'), 'Metropolitan area'] = 'New York City'
    nba_df.loc[nba_df['team'].str.contains('Golden State'), 'Metropolitan area'] = 'San Francisco Bay Area'
    nba_df.loc[nba_df['team'].str.contains('Dallas'), 'Metropolitan area'] = 'Dallas–Fort Worth'
    nba_df.loc[nba_df['team'].str.contains('Washington'), 'Metropolitan area'] = 'Washington, D.C.'
    nba_df.loc[nba_df['team'].str.contains('Minnesota'), 'Metropolitan area'] = 'Minneapolis–Saint Paul'
    nba_df.loc[nba_df['team'].str.contains('Miami'), 'Metropolitan area'] = 'Miami–Fort Lauderdale'
    nba_df.loc[nba_df['team'].str.contains('Indiana'), 'Metropolitan area'] = 'Indianapolis'
    nba_df.loc[nba_df['team'].str.contains('Utah'), 'Metropolitan area'] = 'Salt Lake City'
    
    nba_df['Metropolitan area'].replace("", np.nan, inplace=True)
    nba_df= nba_df.dropna(subset=['Metropolitan area'])
    
    nba_df.W = nba_df.W.astype(np.float)
    nba_df.L = nba_df.L.astype(np.float)
    
    group_nba_df = nba_df.groupby(by=['Metropolitan area']).sum()
    
    group_nba_df['w/l'] = group_nba_df['W']/(group_nba_df['W'] + group_nba_df['L'])
    city_nba = pd.merge(group_nba_df, cities, how='inner', on='Metropolitan area')
   
    city_nba.Population = city_nba.Population.astype(np.float)
    population_by_region =  city_nba['Population']
    win_loss_by_region = city_nba['w/l']
    
    assert len(population_by_region) == len(win_loss_by_region), "Q2: Your lists must be the same length"
    assert len(population_by_region) == 28, "Q2: There should be 28 teams being analysed for NBA"

    corr,pval=stats.pearsonr(population_by_region, win_loss_by_region)
    return corr

nba_correlation()

# The win/loss ratio's correlation with the population of the city it is in for the MLB using 2018 data
import pandas as pd
import numpy as np
import scipy.stats as stats
import re

def mlb_correlation(): 
    mlb_df=pd.read_csv("assets/mlb.csv").iloc[:-1,[0,1,2,5]]
    cities=pd.read_html("assets/wikipedia_data.html",na_values=['-'])[1]
    cities=cities.iloc[:-1,[0,3,6]]
    cities=cities.rename(columns={"Metropolitan area":"Metropolitan area",'Population (2016 est.)[8]':'Population',
                                   "MLB":"MLB"})
    
    mlb_df=mlb_df[mlb_df["year"]==2018]
    cities['MLB']=cities['MLB'].str.split("[").str.get(0)
    cities = cities[(cities.MLB != "—")&(cities.MLB != "")]
    
    city_list = cities['Metropolitan area']

    pattern = '|'.join(city_list)

    mlb_df['Metropolitan area'] = mlb_df['team'].str.findall(pattern)
    
    mlb_df['Metropolitan area'] = [' '.join(map(str, x)) for x in mlb_df['Metropolitan area']]
  
    
    mlb_df.loc[mlb_df['team'].str.contains('New York'), 'Metropolitan area'] = 'New York City'
    mlb_df.loc[mlb_df['team'].str.contains('San Francisco'), 'Metropolitan area'] = 'San Francisco Bay Area'
    mlb_df.loc[mlb_df['team'].str.contains('Oakland'), 'Metropolitan area'] = 'San Francisco Bay Area'
    mlb_df.loc[mlb_df['team'].str.contains('Texas'), 'Metropolitan area'] = 'Dallas–Fort Worth'
    mlb_df.loc[mlb_df['team'].str.contains('Washington'), 'Metropolitan area'] = 'Washington, D.C.'
    mlb_df.loc[mlb_df['team'].str.contains('Minnesota'), 'Metropolitan area'] = 'Minneapolis–Saint Paul'
    mlb_df.loc[mlb_df['team'].str.contains('Miami'), 'Metropolitan area'] = 'Miami–Fort Lauderdale'
    mlb_df.loc[mlb_df['team'].str.contains('Tampa Bay'), 'Metropolitan area'] = 'Tampa Bay Area'
    mlb_df.loc[mlb_df['team'].str.contains('Colorado'), 'Metropolitan area'] = 'Denver'
    mlb_df.loc[mlb_df['team'].str.contains('Arizona'), 'Metropolitan area'] = 'Phoenix'
    mlb_df.loc[mlb_df['team'].str.contains('Colorado'), 'Metropolitan area'] = 'Denver'

    mlb_df['Metropolitan area'].replace("", np.nan, inplace=True)
    mlb_df= mlb_df.dropna(subset=['Metropolitan area'])
    
    mlb_df.W = mlb_df.W.astype(np.float)
    mlb_df.L = mlb_df.L.astype(np.float)
    
    group_mlb_df = mlb_df.groupby(by=['Metropolitan area']).sum()
    
    group_mlb_df['w/l'] = group_mlb_df['W']/(group_mlb_df['W'] + group_mlb_df['L'])
    city_mlb = pd.merge(group_mlb_df, cities, how='inner', on='Metropolitan area')
    
    city_mlb.Population = city_mlb.Population.astype(np.float)
    population_by_region =  city_mlb['Population']
    win_loss_by_region = city_mlb['w/l']
    
    assert len(population_by_region) == len(win_loss_by_region), "Q3: Your lists must be the same length"
    assert len(population_by_region) == 26, "Q3: There should be 26 teams being analysed for MLB"

    corr,pval=stats.pearsonr(population_by_region, win_loss_by_region)
    return corr

mlb_correlation()

# The win/loss ratio's correlation with the population of the city it is in for the NFL using 2018 data
import pandas as pd
import numpy as np
import scipy.stats as stats
import re

def nfl_correlation(): 
    nfl_df=pd.read_csv("assets/nfl.csv").iloc[:-1,[1,11,13,14]]
    cities=pd.read_html("assets/wikipedia_data.html",na_values=['-'])[1]
    cities=cities.iloc[:-1,[0,3,5]]
    cities=cities.rename(columns={"Metropolitan area":"Metropolitan area",'Population (2016 est.)[8]':'Population',
                                  "NFL":"NFL"})
    
    nfl_df=nfl_df[nfl_df["year"]==2018]
    cities['NFL']=cities['NFL'].str.split("[").str.get(0)
    cities = cities[(cities.NFL != "—")&(cities.NFL != "")]
    
    city_list = cities['Metropolitan area']

    pattern = '|'.join(city_list)

    nfl_df['Metropolitan area'] = nfl_df['team'].str.findall(pattern)
    
    nfl_df['Metropolitan area'] = [' '.join(map(str, x)) for x in nfl_df['Metropolitan area']]
  
    
    nfl_df.loc[nfl_df['team'].str.contains('New York'), 'Metropolitan area'] = 'New York City'
    nfl_df.loc[nfl_df['team'].str.contains('San Francisco'), 'Metropolitan area'] = 'San Francisco Bay Area'
    nfl_df.loc[nfl_df['team'].str.contains('Oakland'), 'Metropolitan area'] = 'San Francisco Bay Area'
    nfl_df.loc[nfl_df['team'].str.contains('Dallas'), 'Metropolitan area'] = 'Dallas–Fort Worth'
    nfl_df.loc[nfl_df['team'].str.contains('Washington'), 'Metropolitan area'] = 'Washington, D.C.'
    nfl_df.loc[nfl_df['team'].str.contains('Minnesota'), 'Metropolitan area'] = 'Minneapolis–Saint Paul'
    nfl_df.loc[nfl_df['team'].str.contains('Miami'), 'Metropolitan area'] = 'Miami–Fort Lauderdale'
    nfl_df.loc[nfl_df['team'].str.contains('Tampa Bay'), 'Metropolitan area'] = 'Tampa Bay Area'
    nfl_df.loc[nfl_df['team'].str.contains('New England'), 'Metropolitan area'] = 'Boston'
    nfl_df.loc[nfl_df['team'].str.contains('Arizona'), 'Metropolitan area'] = 'Phoenix'
    nfl_df.loc[nfl_df['team'].str.contains('Carolina'), 'Metropolitan area'] = 'Charlotte'
    nfl_df.loc[nfl_df['team'].str.contains('Tennessee'), 'Metropolitan area'] = 'Nashville'
    
    nfl_df['Metropolitan area'].replace("", np.nan, inplace=True)
    nfl_df= nfl_df.dropna(subset=['Metropolitan area'])
    
    nfl_df.W = nfl_df.W.astype(np.float)
    nfl_df.L = nfl_df.L.astype(np.float)
    
    group_nfl_df = nfl_df.groupby(by=['Metropolitan area']).sum()
    
    group_nfl_df['w/l'] = group_nfl_df['W']/(group_nfl_df['W'] + group_nfl_df['L'])
    city_nfl = pd.merge(group_nfl_df, cities, how='inner', on='Metropolitan area')
   
    city_nfl.Population = city_nfl.Population.astype(np.float)
    population_by_region =  city_nfl['Population']
    win_loss_by_region = city_nfl['w/l']

    assert len(population_by_region) == len(win_loss_by_region), "Q4: Your lists must be the same length"
    assert len(population_by_region) == 29, "Q4: There should be 29 teams being analysed for NFL"

    print(cities)
    corr,pval=stats.pearsonr(population_by_region, win_loss_by_region)
    return corr

nfl_correlation()
